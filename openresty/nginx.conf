# OpenResty configuration for Hostel Management System
# This replaces the standard Nginx configuration with OpenResty capabilities

worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME Types
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    access_log /usr/local/openresty/nginx/logs/access.log main;
    error_log /usr/local/openresty/nginx/logs/error.log warn;

    # Lua Settings
    lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";
    lua_code_cache on;
    lua_shared_dict hostel_cache 10m;
    lua_shared_dict hostel_locks 1m;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Upstream Definitions
    upstream frontend_backend {
        server frontend:4321 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream api_backend {
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream cms_backend {
        server cms:1337 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Health Check Endpoint
    server {
        listen 80;
        server_name _;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Include additional server configurations
    include /etc/nginx/conf.d/*.conf;
}
