# Main server configuration for Hostel Management System
server {
    listen 80;
    server_name localhost;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Enable Lua for custom logic
    location @lua_fallback {
        content_by_lua_block {
            ngx.header.content_type = "application/json"
            ngx.say('{"error": "Service temporarily unavailable"}')
            ngx.exit(503)
        }
    }

    # API Routes (Django Backend)
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Proxy to Django backend
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Fallback
        error_page 502 503 504 @lua_fallback;
    }

    # CMS Admin Routes (Strapi)
    location /admin {
        limit_req zone=login burst=5 nodelay;
        
        # Proxy to Strapi CMS
        proxy_pass http://cms_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for admin interface
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Fallback
        error_page 502 503 504 @lua_fallback;
    }

    # CMS Content API Routes
    location /strapi/ {
        limit_req zone=api burst=30 nodelay;
        
        # Add CORS headers for content API
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Remove /strapi prefix and proxy to CMS
        rewrite ^/strapi/(.*) /$1 break;
        proxy_pass http://cms_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache content responses
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        
        # Fallback
        error_page 502 503 504 @lua_fallback;
    }

    # Static files from Django backend
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }

    # Media files from Django backend
    location /media/ {
        expires 30d;
        add_header Cache-Control "public";
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }

    # CMS uploads
    location /uploads/ {
        expires 30d;
        add_header Cache-Control "public";
        proxy_pass http://cms_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }

    # Frontend Application (Astro) - Default route
    location / {
        # Custom Lua logic for request routing
        access_by_lua_block {
            -- You can add custom authentication, logging, or routing logic here
            local host_env = os.getenv("HOSTEL_ENV")
            if host_env == "production" then
                ngx.header["X-Environment"] = "production"
            end
        }
        
        # Proxy to Astro frontend
        proxy_pass http://frontend_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Fallback
        error_page 502 503 504 @lua_fallback;
    }

    # WebSocket support for hot reload (development-like features)
    location /_astro/ {
        proxy_pass http://frontend_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
