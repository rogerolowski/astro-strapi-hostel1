services:
  # Django Backend (DRF)
  backend:
    build:
      context: ../backend
      cache_from:
        - hostel_backend:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: hostel_backend:latest
    container_name: hostel_backend
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=hostel.settings
      - DATABASE_URL=postgresql://hostel_user:hostel_password@postgres:5432/hostel_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:4321,http://localhost:1337
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - DB_NAME=hostel_db
      - DB_USER=hostel_user
      - DB_PASSWORD=hostel_password
      - DB_HOST=postgres
      - DB_PORT=5432
    volumes:
      - ../backend:/app
      - backend_static:/app/staticfiles
      - backend_media:/app/media
      - backend_cache:/app/__pycache__
      - backend_pytest_cache:/app/.pytest_cache
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hostel_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
